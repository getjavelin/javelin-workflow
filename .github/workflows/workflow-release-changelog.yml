name: Reusable Workflow - Release Changelog

on:
  workflow_call:
    inputs:
      DEVOPS_REPO:
        required: false
        type: string
        default: "javelin-cloud"
      DEVOPS_BRANCH:
        required: false
        type: string
        default: "main"
      CHANGELOG_BR:
        required: false
        type: string
        default: "main"
    secrets:
      DEVOPS_GITHUB_TOKEN:
        required: true
      SLACK_BOT_TOKEN:
        required: true

env:
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
  DEVOPS_REPO: ${{ inputs.DEVOPS_REPO }}
  DEVOPS_BRANCH: ${{ inputs.DEVOPS_BRANCH }}
  CHANGELOG_BR: ${{ inputs.CHANGELOG_BR }}

jobs:
  javelin-env:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setting up Repo Env
        id: repo_env_setup
        shell: bash
        run: |-
          echo "repository=$(basename ${{ github.repository }})" >> ${GITHUB_OUTPUT}
          echo "shortsha=$(git rev-parse --short=7 HEAD)" >> ${GITHUB_OUTPUT}

      - name: Set Lowercase Repo Name
        id: lc_repository
        env:
          REPO_NAME: ${{ steps.repo_env_setup.outputs.repository }}
        shell: bash
        run: echo "name=${REPO_NAME,,}" >> ${GITHUB_OUTPUT}

      - name: Get Build Config
        id: build_config
        env:
          SVC_NAME: ${{ steps.lc_repository.outputs.name }}
        shell: bash
        run: |-
          chglog_pr_reviewers=$(cat app-config/javelin-default/release-config.json | jq -r '.changelog.pr_reviewers')
          slack_release_channel_id=$(cat app-config/javelin-default/notify-config.json | jq -r '.slack.release.channel_id')
          echo "chglog_pr_reviewers=${chglog_pr_reviewers}" >> ${GITHUB_OUTPUT}
          echo "slack_release_channel_id=${slack_release_channel_id}" >> ${GITHUB_OUTPUT}
    outputs:
      lc_repository: ${{ steps.lc_repository.outputs.name }}
      slack_release_channel_id: ${{ steps.build_config.outputs.slack_scan_channel_id }}
      chglog_pr_reviewers: ${{ steps.build_config.outputs.chglog_pr_reviewers }}

  javelin-chglog:
    needs:
      - javelin-env
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
          persist-credentials: true

      - name: Check chglog config
        id: chglog_config
        shell: bash
        run: |
          if test -d ".chglog" ; then
            if test -f ".chglog/config.yml" ; then
              echo "present=true" >> ${GITHUB_OUTPUT}
            fi
          fi

      - name: Install git-chglog and generate CHANGELOG
        if: ${{ steps.chglog_config.outputs.present == 'true' }}
        shell: bash
        run: |
          curl -sLfO https://github.com/git-chglog/git-chglog/releases/download/v0.15.4/git-chglog_0.15.4_linux_amd64.tar.gz
          tar -zxvf git-chglog_0.15.4_linux_amd64.tar.gz
          chmod +x git-chglog
          ./git-chglog --config .chglog/config.yml --output CHANGELOG.md

      - name: Create Pull Request
        if: ${{ steps.chglog_config.outputs.present == 'true' }}
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
          commit-message: 'devops: Update CHANGELOG for ${{ github.event.release.tag_name }}'
          title: 'CHANGELOG for ${{ github.event.release.tag_name }}'
          committer: GitHub Action <action@github.com>
          author: GitHub Action <action@github.com>
          body: >
            This PR is auto-generated by
            [release pipeline](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          base: ${{ env.CHANGELOG_BR }}
          branch: cicd-changelog
          delete-branch: true
          add-paths: CHANGELOG.md
          reviewers: ${{ needs.javelin-env.outputs.chglog_pr_reviewers }}
    outputs:
      pr_url: ${{ steps.create_pr.outputs.pull-request-url }}
      pr_num: ${{ steps.create_pr.outputs.pull-request-number }}

  javelin-release-notify:
    needs:
      - javelin-env
      - javelin-chglog
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-24.04
    if: always()
    env:
      CHGLOG_PR_URL: ${{ needs.javelin-chglog.outputs.pr_url }}
      CHGLOG_PR_NUM: ${{ needs.javelin-chglog.outputs.pr_num }}
      SVC_NAME: ${{ needs.javelin-env.outputs.lc_repository }}
      JOB_STATUS: ${{ needs.javelin-chglog.result }}
      JOB_STATUS_FAIL_MARK: ":x:"
      SLACK_CHANNEL_ID: ${{ needs.javelin-env.outputs.slack_release_channel_id }}
      JOB_STATUS_SUCCESS_MARK: ":white_check_mark:"
      TAG_NAME: ${{ github.event.release.tag_name }}
      RELEASE_NAME: ${{ github.event.release.name }}
      RELEASE_AUTHOR: ${{ github.event.release.author.login }}
      PR_REVIEWERS: ${{ needs.javelin-env.outputs.chglog_pr_reviewers }}
      BUILD_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      SLACK_PAYLOAD_JSON: slack-release-chglog-payload.json
    steps:
      - name: DevOps Repository Checkout
        uses: actions/checkout@v4
        with:
          repository: "${{ github.repository_owner }}/${{ env.DEVOPS_REPO }}"
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ env.DEVOPS_BRANCH }}
          path: ${{ env.DEVOPS_REPO }}

      - name: Slack Payload Template
        shell: bash
        run: |-
          if [[ ${{ needs.javelin-chglog.result }} == "success" ]] ; then
            export JOB_STATUS_MARK=${JOB_STATUS_SUCCESS_MARK}
          else
            export JOB_STATUS_MARK=${JOB_STATUS_FAIL_MARK}
          fi
          envsubst < ${{ env.DEVOPS_REPO }}/slack-notify/${{ env.SLACK_PAYLOAD_JSON }} > ${{ env.SLACK_PAYLOAD_JSON }}
          cat ${{ env.SLACK_PAYLOAD_JSON }}

      - name: Slack Notification
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload-file-path: "${{ env.SLACK_PAYLOAD_JSON }}"