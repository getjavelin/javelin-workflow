name: Reusable Workflow - DevOps Release Build

on:
  workflow_call:
    inputs:
      BUILD_PLATFORM:
        required: true
        type: string
      IMAGE_NAME:
        required: true
        type: string
      SVC_NAME:
        required: true
        type: string
      SHORT_SHA:
        required: true
        type: string
      REGISTRY:
        required: false
        type: string
        default: "ghcr.io"
      IMAGE_CONTEXT_PREFIX:
        required: false
        type: string
        default: "dockerfiles"
      DOCKER_FILE:
        required: false
        type: string
        default: "Dockerfile"
    secrets:
      DEVOPS_PKG_TOKEN:
        required: true
    outputs:
      svc_name:
        value: ${{ jobs.javelin-build.outputs.svc_name }}

env:
  BUILD_PLATFORM: ${{ inputs.BUILD_PLATFORM }}
  REGISTRY: ${{ inputs.REGISTRY }}
  IMAGE_NAME: ${{ inputs.IMAGE_NAME }}
  SVC_NAME: ${{ inputs.SVC_NAME }}
  SHORT_SHA: ${{ inputs.SHORT_SHA }}
  IMAGE_CONTEXT_PREFIX: ${{ inputs.IMAGE_CONTEXT_PREFIX }}
  DOCKER_FILE: ${{ inputs.DOCKER_FILE }}

jobs:
  javelin-build:
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    runs-on: ubuntu-24.04
    steps:
      - name: Prepare Build
        id: prepare_build
        shell: bash
        run: |-
          platform=${{ env.BUILD_PLATFORM }}
          echo "data=${platform//\//-}" >> ${GITHUB_OUTPUT}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          context: workflow
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          tags: |
            type=raw, value=${{ env.SVC_NAME }}
            type=semver, pattern={{version}}
            type=semver, pattern={{major}}.{{minor}}
            type=ref, event=tag
            type=raw, value=${{ env.SVC_NAME }}-commit-${{ env.SHORT_SHA }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DEVOPS_PKG_TOKEN }}

      - name: Build Docker Image
        id: img_build
        uses: docker/build-push-action@v5
        with:
          context: "${{ env.IMAGE_CONTEXT_PREFIX }}/${{ env.SVC_NAME }}"
          file: "${{ env.IMAGE_CONTEXT_PREFIX }}/${{ env.SVC_NAME }}/${{ env.DOCKER_FILE }}"
          platforms: ${{ env.BUILD_PLATFORM }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

      - name: Export Digest
        shell: bash
        run: |-
          mkdir -p /tmp/${{ env.SVC_NAME }}
          digest="${{ steps.img_build.outputs.digest }}"
          touch "/tmp/${{ env.SVC_NAME }}/${digest#sha256:}" 

      - name: Upload Digest
        env:
          PLATFORM_PAIR: ${{ steps.prepare_build.outputs.data }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SVC_NAME }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/${{ env.SVC_NAME }}/*
          if-no-files-found: error
          retention-days: 1