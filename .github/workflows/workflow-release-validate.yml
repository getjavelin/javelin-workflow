name: Reusable Workflow - Release Validate

on:
  workflow_call:
    inputs:
      SVC_NAME:
        required: true
        type: string
      REGEX_PATTERN:
        required: false
        type: string
        default: "^v[0-9]+\\.[0-9]+\\.[0-9]+$"
    outputs:
      enable_build:
        value: ${{ jobs.javelin-validate.outputs.enable_build }}

env:
  SVC_NAME: ${{ inputs.SVC_NAME }}
  REGEX_PATTERN: ${{ inputs.REGEX_PATTERN }}

jobs:
  javelin-validate:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Validate Release Branch
        env:
          RELEASE_NAME: ${{ github.event.release.name }}
        shell: bash
        run: |-
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref_name }})
          TAG_BRANCH=$(git branch -r --contains ${TAG_COMMIT} | grep -v HEAD | head -n 1 | sed 's/origin\///')
          if [[ "${TAG_BRANCH}" != "main" ]] ; then
            echo "Invalid Branch for Release : ${TAG_BRANCH}"
            exit 1
          fi

      - name: Validate Release Tag
        id: validate
        env:
          RELEASE_NAME: ${{ github.event.release.name }}
        shell: bash
        run: |-
          if [[ "${{ env.RELEASE_NAME }}" =~ ${{ env.REGEX_PATTERN }} ]] ; then
            echo "Valid version format: ${{ env.RELEASE_NAME }}"
            echo "enable_build=true" >> ${GITHUB_OUTPUT}
          else
            echo "Invalid version format: ${{ env.RELEASE_NAME }}"
          fi
    outputs:
      enable_build: ${{ steps.validate.outputs.enable_build }}